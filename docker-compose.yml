#
# This is a docker-compose file to build and start all Lakeside Mutual
# applications in a single command.
#
# To run the applications:
#   docker-compose up
#
# To shut down the applications, simply terminate the previous command.
#

version: '3.7'

services:
  spring-boot-admin:
    build: 
      context: ./spring-boot-admin
    volumes: 
      - ./spring-boot-admin/src:/usr/src/app
    ports:
      - "9000:9000"

  customer-core:
    build: customer-core
    image: customer-core
    environment:
      - "SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000"
      - "SPRING_ZIPKIN_BASE-URL=http://tracing-server:9411"
      - "CUSTOMERMANAGEMENT_BASEURL=http://customer-management-backend:8100"
    ports:
      - "8110:8110"
      - "8111:8111"

  customer-management-backend:
    build: 
      context: ./customer-management-backend
    depends_on:
      - customer-core
    volumes: 
      - ./customer-management-backend/src:/usr/src/app
    environment:
      - "CUSTOMERCORE_BASEURL=http://customer-core:8110"
      - "SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000"
      - "SPRING_ZIPKIN_BASE-URL=http://tracing-server:9411"
    ports:
      - "8100:8100"

  customer-management-frontend:
    build:
      context: ./customer-management-frontend
    volumes:
      - ./customer-management-frontend/src:/usr/src/app
    depends_on:
      - customer-management-backend
    ports:
      - "3020:80"

#  customer-management-frontend:
#    build: customer-management-frontend
#    image: lakesidemutual/customer-management-frontend
#    depends_on:
#      - customer-management-backend
#    environment:
#      - "REACT_APP_CUSTOMER_MANAGEMENT_BACKEND=http://customer-management-backend:8100"
#    ports:
#      - "3020:80"
#    volumes:
#      - "node_modules:/usr/src/app/node_modules"

  policy-management-backend:
    build: 
      context: ./policy-management-backend
    volumes: 
      - ./policy-management-backend/src:/usr/src/app
    depends_on:
      - customer-core
    environment:
      - "CUSTOMERCORE_BASEURL=http://customer-core:8110"
      - "SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000"
      - "SPRING_ZIPKIN_BASE-URL=http://tracing-server:9411"
    ports:
      - "8090:8090"
      - "61613:61613"
      - "61616:61616"

  policy-management-frontend:
    build: ./policy-management-frontend
    volumes: 
      - ./policy-management-frontend/src:/usr/src/app
    depends_on:
      - policy-management-backend
    ports:
      - "3010:80"

#  policy-management-frontend:
#    build: policy-management-frontend
#    image: lakesidemutual/policy-management-frontend
#    depends_on:
#      - policy-management-backend
#    environment:
#      - "VUE_APP_POLICY_MANAGEMENT_BACKEND=http://policy-management-backend:8090"
#    ports:
#      - "3010:80"
#    volumes:
#      - "node_modules:/usr/src/app/node_modules"

  customer-self-service-backend:
    build: 
      context: ./customer-self-service-backend
    volumes:
      - ./customer-self-service-backend/src:/usr/src/app
    depends_on:
      - customer-core
      - policy-management-backend
    environment:
      - "CUSTOMERCORE_BASEURL=http://customer-core:8110"
      - "POLICYMANAGEMENT_TCPBROKERBINDADDRESS=tcp://policy-management-backend:61616"
      - "SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000"
      - "SPRING_ZIPKIN_BASE-URL=http://tracing-server:9411"
    ports:
      - "8080:8080"

  customer-self-service-frontend:
    build:
      context: ./customer-self-service-frontend
    volumes:
      - ./customer-self-service-frontend/src:/usr/src/app
    depends_on:
      - customer-self-service-backend
      - customer-management-backend
      - policy-management-backend
    ports:
      - "3000:80"

#  customer-self-service-frontend:
#    build: customer-self-service-frontend
#    image: lakesidemutual/customer-self-service-frontend
#    depends_on:
#      - customer-self-service-backend
#      - customer-management-backend
#      - policy-management-backend
#    environment:
#      - "REACT_APP_CUSTOMER_SELF_SERVICE_BACKEND=http://customer-self-service-backend:8080"
#      - "REACT_APP_POLICY_MANAGEMENT_BACKEND=http://policy-management-backend:8090"
#      - "REACT_APP_CUSTOMER_MANAGEMENT_BACKEND=http://customer-management-backend:8100"
#    ports:
#      - "3000:80"
#    volumes:
#      - "node_modules:/usr/src/app/node_modules"

  risk-management-server:
    build:
      context: ./risk-management-server
#    volumes:
#      - ./risk-management-server/src:/usr/src/app
    depends_on:
      - policy-management-backend
    environment:
      - "ACTIVEMQ_HOST=policy-management-backend"
      - "ACTIVEMQ_PORT=61613"
    ports:
      - "50051:50051"

#  risk-management-server:
#    build: risk-management-server
#    image: lakesidemutual/risk-management-server
#    depends_on:
#      - policy-management-backend
#    environment:
#      - "activeMQ.host=policy-management-backend"
#      - "activeMQ.port=61613"
#    ports:
#      - "50051:50051"
#    volumes:
#      - "node_modules:/usr/src/app/node_modules"

  tracing-server:
    image: openzipkin/zipkin
    container_name: tracing-server
    depends_on:
      - elasticsearch
    environment:
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
      - "STORAGE_TYPE=elasticsearch"
      - "ES_HOSTS=elasticsearch:9200"
      - ES_HTTP_LOGGING=BODY
    ports:
      - 9411:9411


  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200
    deploy:
      resources:
        limits:
            memory: 3g

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

#volumes:
#  node_modules: